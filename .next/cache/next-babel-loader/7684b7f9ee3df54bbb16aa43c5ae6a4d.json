{"ast":null,"code":"var _jsxFileName = \"/project/SimplePokedex/components/PokemonInfoCard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useRef } from \"react\";\nimport { Card, Badge, Row, Col, Form, InputGroup, Button } from \"react-bootstrap\";\nimport PokemonAppData from \"../pages/PokemonContext\";\n\nvar PokemonInfoCard = function PokemonInfoCard() {\n  var _useContext = useContext(PokemonAppData),\n      selected = _useContext.selected;\n\n  var _useState = useState(\"\"),\n      generation = _useState[0],\n      setGeneration = _useState[1];\n\n  var _useState2 = useState(false),\n      isShiny = _useState2[0],\n      setIsShiny = _useState2[1];\n\n  var SelectElement = useRef(null);\n\n  function checkSelected(selected) {\n    return typeof selected !== \"number\" && typeof selected !== \"string\";\n  }\n\n  var CardStyles = {\n    position: \"fixed\",\n    bottom: \"50%\",\n    right: \"10vw\",\n    width: \"25vw\",\n    minWidth: \"300px\",\n    maxWidth: \"450px\",\n    transform: \"translateY(50%)\"\n  };\n  return __jsx(Card, {\n    style: CardStyles,\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Card.Img, {\n    variant: \"top\",\n    src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(generation + (isShiny ? \"shiny/\" : \"\") + selected.id, \".\").concat(generation === \"other/dream-world/\" ? \"svg\" : \"png\"),\n    onError: function onError() {\n      alert(\"No Image.\");\n      setGeneration(\"\");\n\n      if (SelectElement.current !== null) {\n        SelectElement.current.options[0].selected = true;\n      }\n    },\n    className: \"mx-auto p-2\",\n    style: {\n      maxWidth: 250,\n      maxHeight: 250,\n      minHeight: 100,\n      minWidth: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Button, {\n    title: !isShiny ? \"Default\" : \"Shiny\",\n    onClick: function onClick() {\n      return setIsShiny(function (prev) {\n        return !prev;\n      });\n    },\n    style: {\n      cursor: \"pointer\",\n      whiteSpace: \"nowrap\"\n    },\n    variant: \"\".concat(isShiny ? \"secondary\" : \"primary\"),\n    className: \"rounded-0 w-25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, isShiny ? \"Default\" : \"Shiny\"), __jsx(Form.Select, {\n    ref: SelectElement,\n    onChange: function onChange(e) {\n      return setGeneration(e.target.value);\n    },\n    size: \"sm\",\n    \"aria-label\": \"Default select example\",\n    className: \"text-center rounded-0\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sprites\"), __jsx(\"option\", {\n    value: \"versions/generation-i/red-blue/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Gen 1\"), __jsx(\"option\", {\n    value: \"versions/generation-ii/crystal/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Gen 2\"), __jsx(\"option\", {\n    value: \"versions/generation-iii/emerald/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Gen 3\"), __jsx(\"option\", {\n    value: \"versions/generation-iv/diamond-pearl/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Gen 4\"), __jsx(\"option\", {\n    value: \"versions/generation-v/black-white/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Gen 5\"), __jsx(\"option\", {\n    value: \"versions/generation-vi/omegaruby-alphasapphire/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Gen 6\"), __jsx(\"option\", {\n    value: \"versions/generation-vii/ultra-sun-ultra-moon/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Gen 7\"), __jsx(\"option\", {\n    value: \"other/dream-world/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Dream World\"))), __jsx(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, checkSelected(selected) && selected.name.english), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, checkSelected(selected) && selected.type.map(function (type) {\n    return __jsx(Badge, {\n      className: \"me-1 text-light bg-primary text-center\",\n      key: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      style: {\n        fontSize: \"14px\"\n      },\n      className: \"d-flex justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, type));\n  })))), __jsx(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"HP:\"), \" \", selected.base.HP), __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Attack:\"), \" \", selected.base.Attack), __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Defense:\"), \" \", selected.base.Defense)), __jsx(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Sp. Attack:\"), \" \", selected.base[\"Sp. Attack\"]), __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Sp. Defense:\"), \" \", selected.base[\"Sp. Defense\"]), __jsx(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Speed:\"), \" \", selected.base.Speed)))));\n};\n\nexport default React.memo(PokemonInfoCard);","map":{"version":3,"sources":["/project/SimplePokedex/components/PokemonInfoCard.tsx"],"names":["React","useContext","useState","useRef","Card","Badge","Row","Col","Form","InputGroup","Button","PokemonAppData","PokemonInfoCard","selected","generation","setGeneration","isShiny","setIsShiny","SelectElement","checkSelected","CardStyles","position","bottom","right","width","minWidth","maxWidth","transform","id","alert","current","options","maxHeight","minHeight","prev","cursor","whiteSpace","e","target","value","name","english","type","map","fontSize","base","HP","Attack","Defense","Speed","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef } from \"react\";\nimport {\n  Card,\n  Badge,\n  Row,\n  Col,\n  Form,\n  InputGroup,\n  Button\n} from \"react-bootstrap\";\nimport { Pokemon } from \"../pages\";\nimport PokemonAppData from \"../pages/PokemonContext\";\n\nconst PokemonInfoCard = () => {\n  const { selected } = useContext(PokemonAppData);\n  const [generation, setGeneration] = useState(\"\");\n  const [isShiny, setIsShiny] = useState(false);\n\n  const SelectElement = useRef<HTMLSelectElement | null>(null);\n\n  function checkSelected(selected: string | number | Pokemon): boolean {\n    return typeof selected !== \"number\" && typeof selected !== \"string\";\n  }\n\n  const CardStyles: React.CSSProperties = {\n    position: \"fixed\",\n    bottom: \"50%\",\n    right: \"10vw\",\n    width: \"25vw\",\n    minWidth: \"300px\",\n    maxWidth: \"450px\",\n    transform: \"translateY(50%)\"\n  };\n\n  return (\n    <Card style={CardStyles} className=\"mt-3\">\n      <Card.Img\n        variant=\"top\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n          generation + (isShiny ? \"shiny/\" : \"\") + selected.id\n        }.${generation === \"other/dream-world/\" ? \"svg\" : \"png\"}`}\n        onError={() => {\n          alert(\"No Image.\");\n          setGeneration(\"\");\n          if (SelectElement.current !== null) {\n            SelectElement.current.options[0].selected = true;\n          }\n        }}\n        className=\"mx-auto p-2\"\n        style={{ maxWidth: 250, maxHeight: 250, minHeight: 100, minWidth: 100 }}\n      />\n      <InputGroup>\n        <Button\n          title={!isShiny ? \"Default\" : \"Shiny\"}\n          onClick={() => setIsShiny((prev) => !prev)}\n          style={{ cursor: \"pointer\", whiteSpace: \"nowrap\" }}\n          variant={`${isShiny ? \"secondary\" : \"primary\"}`}\n          className=\"rounded-0 w-25\"\n        >\n          {isShiny ? \"Default\" : \"Shiny\"}\n        </Button>\n        <Form.Select\n          ref={SelectElement}\n          onChange={(e) => setGeneration(e.target.value)}\n          size=\"sm\"\n          aria-label=\"Default select example\"\n          className=\"text-center rounded-0\"\n          style={{ cursor: \"pointer\" }}\n        >\n          <option value=\"\">Sprites</option>\n          <option value=\"versions/generation-i/red-blue/\">Gen 1</option>\n          <option value=\"versions/generation-ii/crystal/\">Gen 2</option>\n          <option value=\"versions/generation-iii/emerald/\">Gen 3</option>\n          <option value=\"versions/generation-iv/diamond-pearl/\">Gen 4</option>\n          <option value=\"versions/generation-v/black-white/\">Gen 5</option>\n          <option value=\"versions/generation-vi/omegaruby-alphasapphire/\">\n            Gen 6\n          </option>\n          <option value=\"versions/generation-vii/ultra-sun-ultra-moon/\">\n            Gen 7\n          </option>\n          <option value=\"other/dream-world/\">Dream World</option>\n        </Form.Select>\n      </InputGroup>\n\n      <Card.Header>\n        <div className=\"d-flex justify-content-between\">\n          <div>{checkSelected(selected) && selected.name.english}</div>\n          <div>\n            {checkSelected(selected) &&\n              selected.type.map((type: string) => (\n                <Badge\n                  className=\"me-1 text-light bg-primary text-center\"\n                  key={type}\n                >\n                  <span\n                    style={{ fontSize: \"14px\" }}\n                    className=\"d-flex justify-content-center align-items-center\"\n                  >\n                    {type}\n                  </span>\n                </Badge>\n              ))}\n          </div>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Row>\n          <Col xs={6}>\n            <Card.Text>\n              <b>HP:</b> {selected.base.HP}\n            </Card.Text>\n            <Card.Text>\n              <b>Attack:</b> {selected.base.Attack}\n            </Card.Text>\n            <Card.Text>\n              <b>Defense:</b> {selected.base.Defense}\n            </Card.Text>\n          </Col>\n          <Col xs={6}>\n            <Card.Text>\n              <b>Sp. Attack:</b> {selected.base[\"Sp. Attack\"]}\n            </Card.Text>\n            <Card.Text>\n              <b>Sp. Defense:</b> {selected.base[\"Sp. Defense\"]}\n            </Card.Text>\n            <Card.Text>\n              <b>Speed:</b> {selected.base.Speed}\n            </Card.Text>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default React.memo(PokemonInfoCard);\n"]},"metadata":{},"sourceType":"module"}